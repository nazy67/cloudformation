AWSTemplateFormatVersion: 2010-09-09 
Description: This template creates wordpress host with bastion-key, RDS and ALB Route 53.

### Define Parameters ###

Parameters:
  # Network 
  PubPrivateVPC:
    Description: Enter you VPC ID  
    Type: String
    Default: ""   
  AvailabilityZone1:
    Description: The AvailabilityZone to use for the first subnet
    Type: AWS::EC2::AvailabilityZone::Name
  AvailabilityZone2:
    Description: The AvailabilityZone to use for the second subnet
    Type: AWS::EC2::AvailabilityZone::Name
  PrivateSubnet1:  
    Type: String
    Default: ""
  PrivateSubnet2:  
    Type: String
    Default: ""
  PublicSubnet1: 
    Type: String
    Default: ""
  PublicSubnet2:
    Type: String
    Default: ""    
  
  # Security Groups
  WebServerSecurityGroup: 
    Description: Enter your WebServer sec grp id    
    Type: String
    Default: ""
  RDSSecurityGroup: 
    Description: Enter your RDS sec grp id 
    Type: String
    Default: ""
  ELBSecurityGroup: 
    Description: Enter your ELB sec grp id 
    Type: String
    Default: ""   

  # RDS DataBase Parameters
  DBUserName:  
    NoEcho: 'true'
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    Description: must begin with a letter and contain only alphanumeric characters.
  DBUserPassword:   
    NoEcho: 'true'
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    Description: must contain only alphanumeric characters.  
  DataBaseInstanceId:  
    Default: mydbinstance
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    Description: Must begin with a letter and must not end with a hyphen or contain two consecutive hyphens.
  DataBaseInstanceClass:  
    Type: String
    Default: db.t2.micro
    AllowedValues: [db.t2.micro, db.t2.medium, db.t2.small]
    Description: must select a valid database instance type.
  DBAllocatedStorage:  
    Default: '20'
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    Description: must be between 20 and 65536 GiB. 
  StorageType: 
    Type: String
    Default: gp2
      
  AppLoadbalancerSslCertArn:
    Description: Enter your SSL certificate for Application load balancer
    Type: String
    Default: "" 
  
  # Route 53 parameters 
  WpWebDomain:
    Description: "A reference to the Webserver Fully Qualified Domain Name domain name www.example.com"
    Type: "String" 
  WpHostedZone:
    Description: "A reference to the Hosted Zone example.com"
    Type: "String"
  WPWebALBHostedZoneId: 
    Description: "A reference to the Webserver ELB (Canonical) Hosted Zone ID "
    Type: String
    Default: Z35SXDOTRQ7X7K 
    AllowedValues: 
      - Z35SXDOTRQ7X7K # us-east-1
      - Z3AADJGX6KTTL2 # us-east-2

  ###  Tags   ###
  WordpressTagName: 
    Type: String
    Default: wp-web
  DBSubGrpTagName:
    Type: String
    Default: dbsubgrp
  DataBaseName: 
    Type: String
    Default: wpdb
  RdsDbTagName: 
    Type: String
    Default: my-rdsdb
  TargetGrpTagName:
    Type: String
    Default: target-grp
  AlbTagName:
    Type: String
    Default: app-lb
  
  # Wordpress Web Instance parameters
  WebInstanceType:  
    Type: String   
    Default: t2.micro
    AllowedValues: [t2.micro, t2.small, t2.medium]
    Description: Please choose a valid instance type. 
  VolumeSize:  
    Type: Number
    Default: 20
    Description: Please choose a valid Number
    AllowedValues: [20, 30, 40, 50]
  SSHKeyName:
    Description: 'The name of your local machine ssh-key'
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: "bastion-key"
  SSHLocation:
    Description: The IP address range that can be used to SSH to WordPress host
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Mappings: 
  AWSInstanceType2Arch:    
    t2.micro:
      Arch : HVM64  
    t2.small: 
      Arch : HVM64  
    t2.medium:  
      Arch : HVM64  
  AWSRegionArch2AMI:
    us-east-1: 
      HVM64: ami-04d29b6f966df1537 
    us-east-2: 
      HVM64: ami-09558250a3419e7d0

### Define Resources ###

Resources:
  # WordPress Instance
  WordpressWebInstance: 
    Description:  Word press Web Instance 
    Type: AWS::EC2::Instance
    Properties:
      ImageId:  
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: WebInstanceType
          - Arch
      KeyName: !Ref SSHKeyName   
      InstanceType: !Ref WebInstanceType
      SubnetId: !Ref PrivateSubnet1
      SecurityGroupIds: 
        - !Ref WebServerSecurityGroup #.GroupId
      UserData:
        Fn::Base64: 
          !Sub |
              #!/bin/bash -e
              sudo hostnamectl set-hostname wordpress-web
              sudo amazon-linux-extras install -y php7.2
              sudo yum install -y httpd 
              sudo systemctl start httpd
              sudo systemctl enable httpd
              wget https://wordpress.org/latest.tar.gz
              tar -xzf latest.tar.gz
              sudo yum install php-gd -y
              sudo yum install mysql -y 
              sudo systemctl restart httpd
              sudo cp -r wordpress/* /var/www/html
              sudo chown -R apache:apache /var/www/html
              sudo systemctl restart httpd
      BlockDeviceMappings:
        -
          DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref VolumeSize
      Tags: 
        - Key: Name
          Value: !Ref WordpressTagName 

  # Database Subnet Group
  RDSDBSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: DataBase Subnet Group
      DBSubnetGroupName: !Ref DBSubGrpTagName
      SubnetIds:
        - !Ref PrivateSubnet2
        - !Ref PrivateSubnet1

  # My RDS DB Instance
  MyRDSDB:  
    Type: AWS::RDS::DBInstance
    Properties:
      VPCSecurityGroups: 
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSDBSubnetGroup
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass:  !Ref DataBaseInstanceClass
      Engine: MariaDB
      EngineVersion: 10.4.8
      #StorageEncrypted: true
      DBInstanceIdentifier:  !Ref DataBaseInstanceId
      MasterUsername: !Ref DBUserName
      MasterUserPassword: !Ref DBUserPassword
      DBName: !Ref DataBaseName
      Port: 3306
      BackupRetentionPeriod: 0   
      PubliclyAccessible: false  
      StorageType: !Ref StorageType
      Tags: 
        - Key: Name
          Value: !Ref RdsDbTagName 

  # Target Group
  EC2TargetGroup: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: 
      - MyALB
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      Port: 80
      HealthCheckPort: "traffic-port"
      Protocol: HTTP
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      HealthCheckEnabled: true
      TargetType: instance
      Targets:
      - Id:
          Ref: WordpressWebInstance
      Matcher:
        HttpCode: '200'
      Name: !Ref TargetGrpTagName
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      VpcId: !Ref PubPrivateVPC
      Tags:
      - Key: Name
        Value: !Ref TargetGrpTagName

  # Application Load Balancer
  myHTTPSlListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
      - CertificateArn:
          Ref: AppLoadbalancerSslCertArn
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref MyALB
      Port: 443
      Protocol: HTTPS

  myHTTPListener: 
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - MyALB
      - EC2TargetGroup
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupARN:
            Ref: EC2TargetGroup
      LoadBalancerARN:
          Ref: MyALB
      Port: 80
      Protocol: HTTP
      
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing # or internal
      Subnets:
      - Ref: PublicSubnet1
      - Ref: PublicSubnet2
      SecurityGroups:
      - Ref: ELBSecurityGroup      
      Tags:
      - Key: Name
        Value: ! Ref AlbTagName

  # Route 53
  Route53:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneName: !Sub "${WpHostedZone}."
      Comment: "Zone apex alias targeted to myELB LoadBalancer."
      RecordSets:
      - Name: !Sub "${WpWebDomain}."
        Type: 'A'
        AliasTarget:
          HostedZoneId: !Ref "WPWebALBHostedZoneId"
          DNSName: !GetAtt MyALB.DNSName 

 ### Outputs ###
Outputs:
  WordpressWebInstance:
    Description: WordPress Web Server Id
    Value: !Ref WordpressWebInstance                
  RDSDataBaseName:
    Description:  My RDS Database Name
    Value: !Ref DataBaseName
  RDSDataIdentifier:
    Description:  My RDS Database Identifier
    Value: !Ref MyRDSDB
  RDSDBSubnetGroup: 
    Description: RDS DB Subnet Group
    Value: !Ref RDSDBSubnetGroup
  RDSEndpoint:
    Description: RDS databases Endpoint
    Value: !GetAtt MyRDSDB.Endpoint.Address  
  WpWebAlbDnsName:
    Description: 'Webserver ELB DNS Name A Record'
    Value: !GetAtt MyALB.DNSName
  EC2TargetGroupName:
    Description: 'My EC2 Target Group'
    Value: !Ref TargetGrpTagName
  MyLoadBalancerArn:
    Description: 'Application Load Balancer'
    Value: !Ref MyALB
